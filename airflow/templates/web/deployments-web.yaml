apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}-web
  labels:
    app: {{ template "airflow.name" . }}-web
    component: {{ template "airflow.name" . }}-web
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.airflow.web.replicas }}
  {{- if .Values.airflow.web.updateStategy }}
  strategy:
{{ toYaml .Values.airflow.web.updateStategy | indent 4 }}
  {{- end  }}
  selector:
    matchLabels:
      app: {{ template "airflow.name" . }}-web
      release: {{ .Release.Name }}
      component: {{ template "airflow.name" . }}-web
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps/configmaps.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets/secrets.yaml") . | sha256sum }}
        checksum/config-pip-requirements: {{ include (print $.Template.BasePath "/web/configmaps-web.yaml") . | sha256sum }}
        {{- if .Values.airflow.oauth.enable  }}
          {{- if eq .Values.airflow.oauth.provider "google"  }}
        checksum/secret-google-oauth: {{ include (print $.Template.BasePath "/secrets/secret-google-oauth.yaml") . | sha256sum }}
          {{- end }}
        {{- end }}
      labels:
        app: {{ template "airflow.name" . }}-web
        component: {{ template "airflow.name" . }}-web
        release: {{ .Release.Name }}
    spec:
      affinity:
{{- if .Values.airflow.web.affinity }}
{{ toYaml .Values.airflow.web.affinity | indent 8 }}
{{- else  }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - {{ template "airflow.name" . }}-web
                - {{ template "airflow.name" . }}-worker
                - {{ template "airflow.name" . }}-scheduler
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      {{- if .Values.airflow.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.airflow.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.airflow.web.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.airflow.web.nodeSelector | indent 8 }}
      {{- end }}
      restartPolicy: Always
      initContainers:
        - name: create-airflow-folders
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - >
              ln -s {{ .Values.airflow.env.AIRFLOW_HOME }}/git-sync-data/{{ .Values.airflow.pluginsGitPath }} {{ .Values.airflow.pluginsPath }}/git-sync-data;
              ln -s {{ .Values.airflow.env.AIRFLOW_HOME }}/git-sync-data/{{ .Values.airflow.dagsGitPath }} {{ .Values.airflow.dagsPath }}/git-sync-data;
          volumeMounts:
          - name: airflow-plugins
            mountPath: {{ .Values.airflow.pluginsPath }}
          - name: airflow-dags
            mountPath: {{ .Values.airflow.dagsPath }}
          securityContext:
            runAsUser: 1000
            fsGroup: 1000

        - name: {{ .Chart.Name }}-git-sync-first-init
          imagePullPolicy: {{ .Values.airflow.gitsync.image.pullPolicy }}
          image: "{{ .Values.airflow.gitsync.image.repository }}:{{ .Values.airflow.gitsync.image.tag }}"
          env:
          {{- range $setting, $option := .Values.airflow.gitsync.env }}
          - name: {{ $setting }}
            value: "{{ $option }}"
          {{- end }}
          - name: GIT_SYNC_ONE_TIME
            value: "true"
          resources:
{{ toYaml .Values.airflow.gitsync.resources | indent 12 }}
          volumeMounts:
            - name: git-sync-deploy-key
              mountPath: /etc/git-secret/ssh
              subPath: ssh
            - name: git-sync-data
              mountPath: /git
          securityContext:
            runAsUser: 0
            fsGroup: 1000

      containers:
        - name: {{ .Chart.Name }}-web
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pullPolicy}}
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: '{{ template "airflow.fullname" . }}-env'
            - secretRef:
                name: '{{ template "airflow.fullname" . }}-secret-env'
          env:
          {{- if .Values.airflow.web.env  }}
            {{- range $setting, $option := .Values.airflow.web.env }}
          - name: {{ $setting }}
            value: "{{ $option }}"
            {{- end }}
          {{- end }}
          {{- if .Values.ingress.enabled  }}
          - name: AIRFLOW__WEBSERVER__BASE_URL
            value: '{{ if .Values.ingress.https }}https{{ else }}http{{ end }}://{{ if .Values.ingress.createNamespaceSubdomain }}{{ .Release.Namespace }}.{{ end }}{{ .Values.ingress.web.host }}'
          {{- else if eq .Values.airflow.service.type "NodePort" }}
          - name: AIRFLOW__WEBSERVER__BASE_URL
            value: 'http://localhost:{{ .Values.airflow.web.nodeport }}'
          {{- end }}
          {{- if .Values.airflow.oauth.enable  }}
            {{- if eq .Values.airflow.oauth.provider "google"  }}
          - name: AIRFLOW__WEBSERVER__AUTHENTICATE
            value: "true"
          - name: AIRFLOW__WEBSERVER__AUTH_BACKEND
            value: "airflow.contrib.auth.backends.google_auth"
          - name: AIRFLOW__GOOGLE__OAUTH_CALLBACK_ROUTE
            value: "/oauth2callback"
          - name: AIRFLOW__GOOGLE__DOMAIN
            value: "{{ .Values.airflow.oauth.domain }}"
          - name: AIRFLOW__GOOGLE__CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ template "airflow.fullname" . }}-google-oauth
                key: googleClientID
          - name: AIRFLOW__GOOGLE__CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "airflow.fullname" . }}-google-oauth
                key: googleClientSecret
            {{- end }}
          {{- end }}
          resources:
{{ toYaml .Values.airflow.web.resources | indent 12 }}
          volumeMounts:
            - name: git-sync-data
              mountPath: {{ .Values.airflow.env.AIRFLOW_HOME }}/git-sync-data
            - name: pip-requirements
              mountPath: /requirements.txt
              subPath: requirements.txt
          {{- if and .Values.airflow.rbac.enable .Values.airflow.oauth.enable }}
            - name: webserver-rbac-config
              mountPath: {{ .Values.airflow.env.AIRFLOW_HOME }}/webserver_config.py
              subPath: webserver_config.py
              readOnly: true
          {{- end }}
            - name: airflow-plugins
              mountPath: {{ .Values.airflow.pluginsPath }}
            - name: airflow-dags
              mountPath: {{ .Values.airflow.dagsPath }}
          {{- if and .Values.airflow.metrics }}
            - name: metrics-plugin
              mountPath: {{ .Values.airflow.pluginsPath }}/monitoring/prometheus_exporter.py
              subPath: prometheus_exporter.py
          {{- end }}
{{- $root := . -}}
{{- range .Values.additionalResources.configMap2File }}
  {{- if .mountAsDir }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
  {{- else }}
    {{- $configMap := . }}
    {{- range $file, $content := .data }}
            - name: {{ $configMap.name }}
              mountPath: {{ $configMap.mountPath }}/{{ $file }}
              subPath: {{ $file }}
    {{- end }}
  {{- end }}
{{- end }}
{{- range .Values.additionalResources.secret2File }}
  {{- if .mountAsDir }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
  {{- else }}
    {{- $secret := . }}
    {{- range $file, $content := .data }}
            - name: {{ $secret.name }}
              mountPath: {{ $secret.mountPath }}/{{ $file }}
              subPath: {{ $file }}
    {{- end }}
  {{- end }}
{{- end }}
          securityContext:
            fsGroup: 1000
          args: ["webserver"]
          livenessProbe:
            httpGet:
              path: "/health"
              port: web
            ## Keep 3 minutes the delay to allow clean wait of postgres and redis containers
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/health"
              port: web
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3

        - name: {{ .Chart.Name }}-git-sync
          imagePullPolicy: {{ .Values.airflow.gitsync.image.pullPolicy }}
          image: "{{ .Values.airflow.gitsync.image.repository }}:{{ .Values.airflow.gitsync.image.tag }}"
          env:
          {{- range $setting, $option := .Values.airflow.gitsync.env }}
          - name: {{ $setting }}
            value: "{{ $option }}"
          {{- end }}
          resources:
{{ toYaml .Values.airflow.gitsync.resources | indent 12 }}
          volumeMounts:
            - name: git-sync-deploy-key
              mountPath: /etc/git-secret/ssh
              subPath: ssh
            - name: git-sync-data
              mountPath: /git
          securityContext:
            runAsUser: 0
            fsGroup: 1000

      volumes:
        - name: git-sync-data
          emptyDir:
            defaultMode: 0755
        - name: pip-requirements
          configMap:
            name: {{ template "airflow.fullname" . }}-web-pip-requirements
        - name: git-sync-deploy-key
          secret:
            secretName: {{ template "airflow.fullname" . }}-git-key
            defaultMode: 0400
        {{- if and .Values.airflow.rbac.enable .Values.airflow.oauth.enable }}
        - name: webserver-rbac-config
          configMap:
            name: {{ template "airflow.fullname" . }}-webserver-rbac-config
        {{- end }}
        - name: airflow-plugins
          emptyDir:
            defaultMode: 0755
        - name: airflow-dags
          emptyDir:
            defaultMode: 0755
        {{- if .Values.airflow.metrics }}
        - name: metrics-plugin
          configMap:
            name: {{ template "airflow.fullname" . }}-metrics-script
        {{- end }}
{{- $root := . -}}
{{- range .Values.additionalResources.configMap2File }}
        - name: {{ .name }}
          configMap:
            name: {{ template "airflow.fullname" $root }}-{{ .name }}
  {{- if .defaultMode }}
            defaultMode: {{ .defaultMode }}
  {{- end  }}
{{- end  }}
{{- range .Values.additionalResources.secret2File }}
        - name: {{ .name }}
          secret:
            secretName: {{ template "airflow.fullname" $root }}-{{ .name }}
  {{- if .defaultMode }}
            defaultMode: {{ .defaultMode }}
  {{- end  }}
{{- end  }}
